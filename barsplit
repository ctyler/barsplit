#!/bin/bash
#
# barplit :: split a large scanned PDF into units of X pages
#             and name each unit based on a barcode found on the
#             first page of that unit
#
# Original purpose: to permit student work to be returned by processing
# a scan of that work, with barcode sheets inserted at the start of each
# student's information.
#
# Dependencies:
#	Binary			Package name (Fedora)
#	zbarimg			zbar
#	pdfseparate		poppler-utils
#	pdftoppm		poppler-utils
#

# Number of pages per split unit
P="$(tr -cd "[0-9]" <<<$1)"

# Input filename
I="$2"

# Check arguments
if [ $# -ne 2 ] || [ "${P}" -lt 1 ] || [ ! -f "$I" ]
then
	echo "$(basename $0): Utility to split a PDF based on barcodes." >&2
	echo "Output is in output/BARCODE.pdf" >&2
	echo "Usage: $(basename $0) pages_per_group input_file.pdf" >&2
	exit 1
fi

echo "P: $P"
echo "I: $I"

# Split the input file into separate PDF pages
rm -rf barsplit
mkdir -p barsplit/{split,output/named,output/sequence}
pdfseparate "${I}" barsplit/split/image-%d.pdf

# Find barcodes
cd barsplit/split

PG=1
while [ -f image-${PG}.pdf ]
do

	echo "Processing image-${PG}.pdf"

	BARCODE=$(zbarimg --raw image-${PG}.pdf 2>/dev/null)
	if [ $? -ne 0 ]
	then
		echo "Failure; barcode not found in 'image-${PG}.pdf'." >&2
	else
		RAW="${BARCODE}"
		BARCODE="$(cut -d: -f2 <<<$RAW)"
		SEQ="$(printf "%03d" "$(cut -d: -f1 <<<$RAW)")"
		echo "RAW:     ${RAW}"
		echo "BARCODE: ${BARCODE}"
		echo "SEQ:     ${SEQ}"

		if [ "${P}" -eq 1 ]
		then
	
			mv "image-${PG}.pdf" "../output/named/${BARCODE}.pdf" 
	
		else
	
			MERGE_ARGS=""
			for ((X=PG; X<P+PG; X++))
			do
				MERGE_ARGS="${MERGE_ARGS} image-${X}.pdf"
			done
			if pdfmerge ${MERGE_ARGS} ../output/named/${BARCODE}.pdf >&/dev/null
			then
				:
			else
				echo "pdfmerge failed: result code $?" >&2
				exit 3
			fi
		fi

		if [ "$SEQ" != "" ]
		then
			cp "../output/named/${BARCODE}.pdf" "../output/sequence/${SEQ}.pdf" 
		fi

	fi
	((PG+=P))
done

